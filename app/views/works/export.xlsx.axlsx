# w/h
max_size = [192.0, 108.0]
cell_ratio = max_size.reduce(&:/)
# fit to sheet unit
cell_height = (max_size.last  * 0.75).to_i
cell_width  = ((max_size.first + 5) / 8.0).to_i

indexes = @columns.to_h
indexes_keys = indexes.keys
column_widths = []
first_col = "A"
excel_header = [first_col.dup] + (1..indexes_keys.size).map { |n| first_col.succ!.dup }
wb = xlsx_package.workbook
wb.add_worksheet(name: "table") do |sheet|
  pics = {}
  sheet.add_row indexes.values
  @data.each_with_index do |data, data_num|
    row = []
    data.each do |index, value|
      col_num = indexes_keys.find_index index
      next if col_num.nil?
      if (value.is_a? ActiveStorage::Attachment) && value.name.eql?("pictures")
        anchor = [(excel_header[col_num] + (data_num + 2).to_s), (excel_header[col_num.next] + (data_num + 3).to_s)]
        pic_size = ["width", "height"].map {|n| value.metadata[n].to_f}
        if pic_size.include? 0
          pic_size = max_size
        else
          pic_ratio = pic_size.reduce(&:/)
          if pic_ratio > cell_ratio
            # wider, fill x
            pic_size[0] = max_size[0]
            pic_size[1] = pic_size[0] / pic_ratio
          else
            # higher, fill y
            pic_size[1] = max_size[1]
            pic_size[0] = pic_size[1] * pic_ratio
          end
        end
        pics[anchor] = [value, pic_size.map(&:to_i)]
        column_widths[col_num] = cell_width
      else
        row[col_num] = value
      end
    end
    if pics.empty?
      sheet.add_row row
    else
      sheet.add_row row, height: cell_height
    end
  end
  pics.map do |anc, img_data|
    #Tempfile.create(encoding: 'ascii-8bit') do |tmp|
    #  tmp << img.download
    #  tmp.flush
    #  sheet.add_image(image_src: tmp.path, start_at: anc) ; #(width: 100, height: 100)
    #end
    img, (width, height) = img_data
    extension = img.filename.to_s.split(".").last
    tmp = Tempfile.create(['', ".#{extension}"], encoding: 'ascii-8bit')
    tmp << img.download
    tmp.flush
    # Anchor
    #sheet.add_image(image_src: tmp.path, start_at: anc.first, end_at: anc.last)
    # Keep ratio but not anchor
    sheet.add_image(image_src: tmp.path, start_at: anc.first, width: width, height: height)
    tmp
  end.each do |tmp|
    tmp.close
  end
  #sheet.column_widths(column_widths) unless column_widths.empty?
  column_widths.each_with_index do |width, index|
    sheet.column_info[index].width = width
  end
end
